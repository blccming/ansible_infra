---
- name: Copy ZFS mount service file
  template:
    src: "{{ role_path }}/templates/mount_zfs_pools.service"
    dest: "/etc/systemd/system/mount_zfs_pools.service"
    owner: root
    group: root
    mode: "0644"

- name: Enable ZFS mount service
  systemd:
    name: mount_zfs_pools.service
    state: started
    enabled: yes

- name: Copy ZFS backup script to bin directory
  template:
    src: "{{ role_path }}/templates/zfs_backup.sh"
    dest: "/usr/local/sbin/zfs_backup.sh"
    owner: root
    group: root
    mode: "0770"

- name: Create ZFS backup cron job
  cron:
    name: "Periodically backup zfs nas pool to backup pool (every day at 15:00)"
    minute: "0"
    hour: "15"
    job: "/usr/local/sbin/zfs_backup.sh"
    state: present

- name: Reboot if user confirms
  block:
    - name: Ask for confirmation before rebooting
      pause:
        prompt: "Do you want to reboot the system to enable ZFS services? (y/n)"
      register: reboot_confirmation

    - name: Reboot the system
      reboot:
        msg: "Rebooting to enable ZFS services"
      when: reboot_confirmation.user_input | lower == 'y'

- name: Check if backup dataset exists
  community.general.zfs_facts:
    name: backuppool/backuppool_data
  register: zfs_facts_backuppool

- name: Debug zfs_facts_backuppool
  debug:
    var: zfs_facts_backuppool

- name: Run syncoid the first time if backup dataset does not exist
  command: /usr/local/sbin/zfs_backup.sh
  when: (zfs_facts_backuppool.ansible_facts.ansible_zfs_datasets | length == 0)

- name: Configure mountpoint for backup dataset
  community.general.zfs:
    name: "{{ item.name }}/{{ item.name }}_data"
    extra_zfs_properties:
      mountpoint: "{{ item.mountpoint }}"
    state: present
  loop: "{{ disk_config }}"
  when: item.wwn in disk_mapping | map(attribute='wwn') | list and item.name == 'backuppool' # only include backuppool
