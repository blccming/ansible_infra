---
services:
{% if "caddy" in services %}
  caddy:
    build:
        dockerfile: "{{ docker_dir }}/caddy/Dockerfile"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
      - "9:9/udp"
      - "7:7/udp"
    volumes:
      - "{{ docker_dir }}/caddy/Caddyfile:/etc/caddy/Caddyfile"
      - "{{ docker_dir }}/caddy/site:/srv"
      - "{{ docker_dir }}/caddy/caddy_data:/data"
      - "{{ docker_dir }}/caddy/caddy_config:/config"
      - "{{ docker_dir }}/caddy/certs/certificate.pem:/etc/ssl/certs/certificate.pem"
      - "{{ docker_dir }}/caddy/private/key.pem:/etc/ssl/private/key.pem"
    environment:
      - ACME_AGREE=true
      - CLOUDFLARE_AUTH_TOKEN={{ cloudflare_auth_token_tls }}
    network_mode: host
{% endif %}

{% if "cloudflare-ddns" in services %}
  cloudflare-ddns:
    image: "timothyjmiller/cloudflare-ddns:latest"
    container_name: cloudflare-ddns
    security_opt:
      - no-new-privileges:true
    network_mode: 'host'
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - "{{ docker_dir }}/cloudflare-ddns/config.json:/config.json"
    restart: unless-stopped
{% endif %}

{% if "homarr" in services %}
  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "{{ docker_dir }}/homarr/configs:/app/data/configs"
      - "{{ docker_dir }}/homarr/icons:/app/public/icons"
      - "{{ docker_dir }}/homarr/data:/data"
    ports:
      - "7575:7575"
{% endif %}

{% if "homeassistant" in services %}
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - "{{ docker_dir }}/homeassistant/config:/config"
      - "/etc/localtime:/etc/localtime:ro"
      - "/run/dbus:/run/dbus:ro"
    restart: unless-stopped
    privileged: true
    network_mode: host # port 8123
{% endif %}

{% if "watchtower" in services %}
  watchtower:
    image: containrrr/watchtower
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: unless-stopped
    command: --interval 30
{% endif %}
