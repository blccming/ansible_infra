---
server:
  address: "tcp://:9091"
  endpoints:
    authz:
      forward-auth:
        implementation: "ForwardAuth"

storage:
  local:
    path: "/config/db.sqlite3"

authentication_backend:
  ldap:
    address: "ldap://lldap" # using local lldap
    implementation: "lldap"
    timeout: "5s"
    start_tls: false
    base_dn: "DC={{ domain_local.split('.')[1] }},DC={{ domain_local.split('.')[2] }}"
    users_filter: "(&({username_attribute}={input})(objectClass=person))"
    groups_filter: "(&(member={dn})(objectClass=groupOfNames))"
    group_search_mode: "filter"
    permit_referrals: false
    permit_unauthenticated_bind: false
    user: "UID=admin,OU=people,DC={{ domain_local.split('.')[1] }},DC={{ domain_local.split('.')[2] }}"

session:
  cookies:
    - domain: "{{ domain_public }}"
      authelia_url: "https://auth.{{ domain_public }}"
      default_redirection_url: "https://www.{{ domain_public }}"
      name: "authelia_session"
      expiration: "3 hours"
      inactivity: "30 minutes"
  redis:
    host: "redis"
    port: 6379

totp:
  disable: false
  issuer: "auth.{{ domain_public }}"

access_control:
  default_policy: deny
  rules:
    - domain: "auth.{{ domain_public }}"
      policy: "two_factor"
    - domain: "crg.{{ domain_public }}"
      policy: "one_factor"
    - domain: "cloud.{{ domain_public }}"
      policy: "two_factor"
    - domain: "fin.{{ domain_local }}"
      policy: "two_factor"
    - domain: "hoas.{{ domain_local }}"
      policy: "two_factor"
    - domain: "hrr.{{ domain_local }}"
      policy: "two_factor"
    - domain: "imch.{{ domain_local }}"
      policy: "two_factor"
    - domain: "sync.{{ domain_local }}"
      policy: "two_factor"
      subject:
        - ['group:admins']
    - domain: "trans.{{ domain_local }}"
      policy: "two_factor"
      subject:
        - ['group:admins']
    - domain: "srr.{{ domain_local }}"
      policy: "two_factor"
      subject:
        - ['group:admins']
    - domain: "rrr.{{ domain_local }}"
      policy: "two_factor"
      subject:
        - ['group:admins']
    - domain: "prr.{{ domain_local }}"
      policy: "two_factor"
      subject:
        - ['group:admins']



identity_providers:
  oidc: # DO NOT CHANGE: the following raw operator has to be placed like this in order for the file to be formatted correctly
    jwks: {% raw %}
      - key: {{ secret "/secrets/oidc/jwks/rsa.2048.key" | mindent 10 "|" | msquote }}
{% endraw %}
    clients:
      - client_id: "{{ authelia_immich_cid }}" # immich
        client_name: "Immich"
        client_secret: "{{ authelia_immich_secret_hash }}"
        public: false
        authorization_policy: "two_factor"
        require_pkce: true
        redirect_uris:
          - "https://imch.{{ domain_local }}/auth/login"
          - "https://imch.{{ domain_local }}/user-settings"
          - "app.immich:///oauth-callback"
        scopes:
          - "openid"
          - "profile"
          - "email"
        userinfo_signed_response_alg: "none"
      - client_id: "{{ authelia_jellyfin_cid }}" # jellyfin
        client_name: "Jellyfin"
        client_secret: "{{ authelia_jellyfin_secret_hash }}"
        public: false
        authorization_policy: "two_factor"
        require_pkce: true
        redirect_uris:
          - "https://fin.{{ domain_local }}/sso/OID/redirect/authelia"
        scopes:
          - "openid"
          - "profile"
          - "groups"
        userinfo_signed_response_alg: "none"
        token_endpoint_auth_method: "client_secret_post"
      - client_id: "{{ authelia_nextcloud_cid }}" # nextcloud
        client_name: "Nextcloud"
        client_secret: "{{ authelia_nextcloud_secret_hash }}"
        public: false
        authorization_policy: "two_factor"
        require_pkce: true
        pkce_challenge_method: "S256"
        redirect_uris:
          - "https://cloud.{{ domain_public }}/apps/oidc_login/oidc"
        scopes:
          - "openid"
          - "profile"
          - "email"
          - "groups"
        userinfo_signed_response_alg: "none"
        token_endpoint_auth_method: "client_secret_basic"

regulation:
  max_retries: 5
  find_time: "2 minutes"
  ban_time: "5 minutes"

notifier:
  smtp:
    address: "smtp://smtp.resend.com"
    timeout: "5s"
    username: "resend"
    password: "{{ mail_notification_api_key }}"
    sender: "Authelia <authelia@notifier.{{ domain_public }}>"
    subject: "ðŸ”‘ Authelia: {title}"
    disable_require_tls: false
    disable_starttls: false
    disable_html_emails: false

ntp:
  address: "udp://time.cloudflare.com:123"
  version: 3
  max_desync: "3s"
  disable_startup_check: false
  disable_failure: false
